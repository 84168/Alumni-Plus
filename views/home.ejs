<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AlumniPlus - Connecting Graduates Worldwide</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        /* Custom styles for hover effects */
        #profile-btn:hover,
        #mobile-profile-btn:hover {
            color: #3b82f6;
            transform: scale(1.1);
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            color: #3b82f6;
            transform: translateY(-2px);
        }

        .join-btn:hover {
            background-color: #1d4ed8;
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        .signup-btn:hover {
            background-color: #16a34a;
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        /* Smooth transitions */
        .nav-link,
        .join-btn,
        .signup-btn {
            transition: all 0.3s ease;
        }

        /* Mobile menu animation */
        @keyframes slideIn {
            from {
                transform: translateX(100%);
            }

            to {
                transform: translateX(0);
            }
        }

        .mobile-menu {
            animation: slideIn 0.3s ease-out;
        }

        .page-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .page-header h1 {
            font-size: 2.5em;
            font-weight: 600;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
        }

        .page-header p {
            color: #6b7280;
            font-size: 1.1em;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            height: 600px;
            position: relative;
        }

        .announcements-container {
            height: 100%;
            overflow-y: auto;
            padding: 40px;
        }

        .announcements-container::-webkit-scrollbar {
            width: 8px;
        }

        .announcements-container::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 4px;
        }

        .announcements-container::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 4px;
        }

        .announcements-container::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);
        }

        .announcements-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 25px;
        }

        .announcement-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            position: relative;
            overflow: hidden;
            border: 2px solid transparent;
        }

        .announcement-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transition: height 0.3s ease;
        }

        .announcement-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-color: #667eea;
        }

        .announcement-card:hover::before {
            height: 6px;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-date {
            background: #e0e7ff;
            color: #3730a3;
            padding: 6px 12px;
            border-radius: 12px;
            font-size: 0.85em;
            font-weight: 600;
        }

        .card-title {
            font-size: 1.3em;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 15px;
            line-height: 1.4;
        }

        .card-description {
            color: #4b5563;
            line-height: 1.6;
            margin-bottom: 20px;
        }

        .card-footer {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            padding-top: 15px;
            border-top: 1px solid #f3f4f6;
        }

        .read-more {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            font-size: 0.9em;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .read-more:hover {
            transform: translateX(3px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            padding: 20px;
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal {
            background: white;
            border-radius: 20px;
            max-width: 600px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
            transform: scale(0.9) translateY(30px);
            transition: all 0.3s ease;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
        }

        .modal-overlay.active .modal {
            transform: scale(1) translateY(0);
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            position: relative;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }

        .modal-close {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            font-size: 1.5em;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        .modal-close:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }

        .modal-title {
            font-size: 1.8em;
            font-weight: 600;
            margin-bottom: 15px;
            padding-right: 20px;
        }

        .modal-date {
            background: rgba(255, 255, 255, 0.2);
            padding: 6px 12px;
            border-radius: 8px;
            font-size: 0.9em;
            font-weight: 600;
        }

        .modal-body {
            padding: 30px;
        }

        .modal-description {
            color: #4b5563;
            line-height: 1.8;
            font-size: 1.1em;
            margin-bottom: 25px;
        }

        .modal-actions {
            display: flex;
            gap: 15px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
        }

        .action-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 10px;
            font-size: 0.95em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        .action-btn.secondary {
            background: #f3f4f6;
            color: #374151;
        }

        .action-btn.secondary:hover {
            background: #e5e7eb;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        }

        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 20px;
        }

        .tag {
            background: #e0e7ff;
            color: #3730a3;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 0.8em;
            font-weight: 500;
        }

        @media (max-width: 768px) {
            .container {
                height: 70vh;
            }

            .announcements-container {
                padding: 20px;
            }

            .announcements-grid {
                grid-template-columns: 1fr;
            }

            .page-header h1 {
                font-size: 2em;
            }

            .modal {
                margin: 10px;
                max-height: 95vh;
            }

            .modal-header,
            .modal-body {
                padding: 20px;
            }

            .modal-actions {
                flex-direction: column;
            }
        }

        .alumni-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            position: relative;
            overflow: hidden;
            border: 2px solid transparent;
            text-align: center;
        }

        .alumni-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transition: height 0.3s ease;
        }

        .alumni-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-color: #667eea;
        }

        .alumni-card:hover::before {
            height: 6px;
        }

        .alumni-card img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            margin: 0 auto 15px auto;
            border: 3px solid #e0e7ff;
        }

        .alumni-card h3 {
            font-size: 1.2em;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 8px;
        }

        .alumni-card p {
            color: #6b7280;
            font-size: 0.9em;
        }

        /* Mentorship Card Styles */
        .mentorship-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            position: relative;
            overflow: hidden;
            border: 2px solid transparent;
            text-align: center;
        }

        .mentorship-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #10b981, #059669);
            transition: height 0.3s ease;
        }

        .mentorship-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-color: #10b981;
        }

        .mentorship-card:hover::before {
            height: 6px;
        }

        .mentorship-card img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            margin: 0 auto 15px auto;
            border: 3px solid #d1fae5;
        }

        .mentorship-card h3 {
            font-size: 1.2em;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 8px;
        }

        .mentorship-card p {
            color: #6b7280;
            font-size: 0.9em;
            margin-bottom: 4px;
        }

        /* Job Card Styles */
        .job-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            position: relative;
            overflow: hidden;
            border: 2px solid transparent;
        }

        .job-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #f59e0b, #d97706);
            transition: height 0.3s ease;
        }

        .job-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-color: #f59e0b;
        }

        .job-card:hover::before {
            height: 6px;
        }

        .job-card h3 {
            font-size: 1.3em;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 15px;
        }

        .job-card p {
            color: #4b5563;
            margin-bottom: 10px;
            line-height: 1.5;
        }

        .job-card p strong {
            color: #1f2937;
        }

        .job-card .deadline {
            color: #dc2626;
            font-weight: 600;
        }

        /* Button Styles */
        .action-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 10px;
            font-size: 0.95em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            margin: 10px 5px;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        .action-btn.green {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        }

        .action-btn.green:hover {
            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.4);
        }

        .action-btn.orange {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        }

        .action-btn.orange:hover {
            box-shadow: 0 6px 20px rgba(245, 158, 11, 0.4);
        }

        .button-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 10px;
        }

        .no-content {
            text-align: center;
            color: #6b7280;
            font-size: 1.1em;
            padding: 40px;
            background: #f9fafb;
            border-radius: 10px;
            border: 2px dashed #d1d5db;
        }

        @media (max-width: 768px) {
            .ancontainer {
                margin-bottom: 20px;
            }

            .announcements-container {
                padding: 20px;
            }

            .announcements-grid {
                grid-template-columns: 1fr;
            }

            .anpage-header h1 {
                font-size: 2em;
            }

            .button-container {
                justify-content: center;
            }
        }
    </style>

    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

</head>

<body class="flex min-h-screen flex-col">

    <header class="sticky top-0 bg-white z-50   shadow-md w-full">

        <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
            <nav class="flex flex-wrap items-center justify-between h-20">
                <!-- Logo -->
                <div class="flex items-center space-x-3">
                    <a href="#" class="flex items-center">
                        <i class="fas fa-graduation-cap text-blue-600 text-3xl"></i>
                        <span class="text-2xl font-bold text-gray-800">
                            Alumni<span class="text-black font-black">Plus</span>
                        </span>
                    </a>
                </div>

                <!-- Navigation Links -->
                <div class="hidden lg:flex flex-wrap items-center gap-6 xl:gap-8">
                    <a href="#home" class="nav-link text-gray-700 font-medium hover:text-blue-600 transition">Home</a>
                    <a href="#alumni"
                        class="nav-link text-gray-700 font-medium hover:text-blue-600 transition">Alumni</a>
                    <a href="#mentorship"
                        class="nav-link text-gray-700 font-medium hover:text-blue-600 transition">Mentorship
                        Request</a>
                    <a href="#jobs" class="nav-link text-gray-700 font-medium hover:text-blue-600 transition">Jobs</a>
                    <a href="#endowment"
                        class="nav-link text-gray-700 font-medium hover:text-blue-600 transition">Endowment</a>
                    <a href="#announcements"
                        class="nav-link text-gray-700 font-medium hover:text-blue-600 transition">Announcements</a>
                </div>

                <!-- Action Buttons -->
                <div class="flex items-center space-x-3">
                    <button id="join_network"
                        class="bg-blue-600 text-white px-5 py-2 rounded-md text-sm font-medium hover:bg-blue-700 transition">
                        Join Network
                    </button>
                    <button id="log-in"
                        class="bg-green-600 text-white px-5 py-2 rounded-md text-sm font-medium hover:bg-green-700 transition">
                        LogIn
                    </button>
                    <a id="profile_btn" class="text-gray-700 hover:text-blue-600 transition">
                        <i class="fas fa-user-circle text-3xl"></i>
                    </a>
                </div>
            </nav>
        </div>

    </header>


    <!-- Hero Section -->
    <section id="home" class="w-full py-20 bg-gradient-to-b from-white to-gray-100">
        <div class="container grid lg:grid-cols-2 gap-12 px-6 mx-auto">
            <!-- Left: Heading + Typing Intro -->
            <div class="flex flex-col justify-center space-y-6">
                <h1 class="text-4xl font-bold">Connect with CSE Alumni Network</h1>

                <!-- Typing wrapper -->
                <p id="typing-text" class="text-gray-700 text-lg leading-7"></p>
            </div>

            <!-- Right: Image -->
            <img src="https://images.unsplash.com/photo-1521737604893-d14cc237f11d?auto=format&fit=crop&w=600&q=80"
                alt="CSE Alumni networking" class="rounded-xl shadow-lg hover:scale-[1.02] transform transition" />
        </div>
    </section>



    <!-- Alumni Directory (static example only) -->
    <section id="alumni">
        <div class="container">
            <div class="announcements-container">
                <div class="page-header">
                    <h1>📢 CSE Alumni </h1>
                    <p>Celebrate achievements, reconnect with pears, and explore alumni opportunities worldwide</p>
                </div>
                <div class="button-container">
                    <button id="alumni_list" class="action-btn">
                        🔍 Search Alumni
                    </button>
                </div>
                <div class="announcements-grid">

                    <% rows.forEach(r=> { %>
                        <div class="alumni-card">
                            <img src="https://static.vecteezy.com/system/resources/previews/019/896/008/non_2x/male-user-avatar-icon-in-flat-design-style-person-signs-illustration-png.png"
                                alt="Alumni">
                            <h3>
                                <%= r.Full_Name %>
                            </h3>
                            <p>Batch: <%= r.Batch %>
                            </p>
                        </div>
                        <% }); %>

                </div>
            </div>
        </div>
    </section>

    <!-- Mentorship Section -->

    <section id="mentorship" class="py-20 px-4 bg-white">
        <div class="container">
            <div class="page-header">
                <h1>📢 Mentorship</h1>
                <p>Empower growth through guidance-connect and mentees for meaningfull learning journeys</p>
            </div>
            <!-- <h2 class="text-3xl font-bold text-gray-800 mb-2 text-center">Upcoming Mentorship Sessions</h2> -->
             
                <button id="mentorship_request" type="submit"
                class="ml-auto bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-full font-medium transition-all duration-300 flex items-center">
                View All
            </button>

            
            <!-- <p class="text-xl text-gray-600 mb-12 text-center">Learn directly from experienced alumni</p> -->
             
                <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-8">
                <!-- Mentorship Card 1 -->
                 <%mentorshipSession.slice(0,2).forEach((req)=>{%>
                <div
                    class="bg-white  rounded-lg shadow-md p-6 hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                    <div class="flex justify-center mb-4">
                        <img src="http://static.photos/people/200x200/9" alt="Mentor"
                            class="rounded-full w-24 h-24 object-cover">
                    </div>
                    <h3 class="text-xl font-bold text-center text-gray-800 mb-2"><%=req.Alumni%></h3>
                    <h2 class="text-xl font-bold text-center text-gray-800 mb-2"> <%=req.Topic%></h2>
                    <p class="text-gray-600 text-center mb-2"><%=req.Session_Date%>></p>
                    <p class="text-gray-500 text-center text-sm mb-4"><%=req.Mode%></p>

                </div>
                <%})%>
            </div>
             
            
        </div>
    </section>

    <!-- Jobs -->
    <section id="jobs">
        <div class="container">
            <div class="announcements-container">
                <div class="page-header">
                    <h1>📢 Job & Internships</h1>
                    <p>Discover career opportunities, internships and placements tailored to your skill and aspirations</p>
                </div>
                <div class="button-container">
                    <button class="action-btn orange" id="job_button">
                        💼 Post Job or Intern
                    </button>
                    <button class="action-btn green" id="job_list">
                        👀 View All
                    </button>
                </div>
                <div class="announcements-grid">

                    <% rows1.forEach(req=> { %>
                        <div class="job-card">
                            <h3>
                                <%= req.Title %>
                            </h3>
                            <p><strong>Duration:</strong>
                                <%= req.Duration %>
                            </p>
                            <p>
                                <%= req.Description %>
                            </p>
                            <p><strong>Requirements:</strong>
                                <%= req.Requirement %>
                            </p>
                            <p class="deadline"><strong>Deadline:</strong>
                                <%= new Date(req.Deadline).toLocaleDateString('en-IN', { day: 'numeric' , month: 'long' ,
                                    year: 'numeric' }) %>
                            </p>
                        </div>
                        <% }); %>

                </div>
            </div>
        </div>
    </section>
    <!-- Endowment -->
    <section id="endowment">
        <div class="container">
            <div class="announcements-container">
                <div class="page-header">
                    <h1>📢 Endowment</h1>
                    <p>Support future excellence-learn how contributions shape scholarships, research and innovations</p>
                </div>
                <div class="no-content">
                    <h3>🏗️ Currently Under Development</h3>
                    <p>Endowment and giving programs will be available soon.</p>
                </div>
            </div>
        </div>
    </section>


    <!-- ANNOUNCEMENTS -->
    <section id="announcements">
        <div class="container">
            <div class="announcements-container">
                <div class="page-header">
                    <h1>📢 Announcements</h1>
                    <p>Stay updated with the latest news and important updates</p>
                </div>
                <div class="no-content"  id="no-content">
                    <h3>🏗️ First Login to View Announcements</h3>
                    <!-- <p>Endowment and giving programs will be available soon.</p> -->
                </div>
                <div class="announcements-grid" id="announcementsGrid">
                    <!-- Announcements will be populated by JavaScript -->
                </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal-overlay" id="modalOverlay">
            <div class="modal">
                <div class="modal-header">
                    <div>
                        <h2 class="modal-title" id="modalTitle"></h2>
                        <div class="modal-date" id="modalDate"></div>
                    </div>
                    <button class="modal-close" id="modalClose">×</button>
                </div>
                <div class="modal-body">
                    <p class="modal-description" id="modalDescription"></p>
                    <div class="modal-actions">
                        <button class="action-btn" onclick="handleImportantLink()">
                            📎 Important Link
                        </button>
                        <button class="action-btn secondary" onclick="handleViewFile()">
                            📄 View File
                        </button>
                    </div>
                    <div class="tags" id="modalTags"></div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="w-full border-t bg-gray-50 mt-10">
        <!-- <div class="container mx-auto px-6 py-8 text-center text-gray-500 text-sm">
            © 2025 CSE Alumni Connect. All rights reserved.
        </div> -->

        <% if (authUser) { %>
            <div id="profileModal"
                class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
                <div
                    class="bg-white rounded-xl shadow-2xl max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0">
                    <div class="flex justify-between items-center p-6 border-b">
                        <h2 class="text-2xl font-bold text-gray-800">Welcome, <%= authUser.Role %>
                        </h2>
                        <button id="closeModal"
                            class="text-gray-500 hover:text-gray-700 text-2xl font-bold">&times;</button>
                    </div>
                    <div class="p-6">
                        <div class="flex items-center justify-center mb-6">
                            <div class="relative">
                                <img src="http://static.photos/people/200x200/1" alt="User avatar"
                                    class="w-24 h-24 rounded-full object-cover border-4 border-blue-100">
                                <button id="edit_profile"
                                    class="absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full hover:bg-blue-700 transition-colors">
                                    <i class="fas fa-edit text-sm"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Static Profile View -->
                        <div class="space-y-4" id="staticProfile">
                            <div>
                                <label class="text-sm font-medium text-gray-600">Name</label>
                                <p class="text-lg font-semibold text-gray-800">
                                    <%= authUser.Full_Name %>
                                </p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-600">Email</label>
                                <p class="text-lg font-semibold text-gray-800">
                                    <%= authUser.Email_ID %>
                                </p>
                            </div>
                            <% if (authUser.Enrollment_No) { %>
                                <div>
                                    <label class="text-sm font-medium text-gray-600">Enrollment No</label>
                                    <p class="text-lg font-semibold text-gray-800">
                                        <%= authUser.Enrollment_No %>
                                    </p>
                                </div>
                                <% } %>
                                    <div>
                                        <label class="text-sm font-medium text-gray-600">Contact</label>
                                        <p class="text-lg font-semibold text-gray-800">
                                            <%= authUser.Contact_no %>
                                        </p>
                                    </div>
                                    <div>
                                        <label class="text-sm font-medium text-gray-600">Batch</label>
                                        <p class="text-lg font-semibold text-gray-800">
                                            <%= authUser.Batch %>
                                        </p>
                                    </div>
                        </div>

                        <!-- Editable Form -->
                        <form id="profileForm" action="/update_profile" method="POST" enctype="multipart/form-data"
                            class="space-y-4 hidden">
                            <input type="hidden" name="Email_ID" value="<%= authUser.Email_ID %>">
                            <div>
                                <label class="text-sm font-medium text-gray-600">Name</label>
                                <input type="text" name="Full_Name" value="<%= authUser.Full_Name %>"
                                    class="w-full border rounded px-4 py-2">
                            </div>
                            <% if (authUser.Enrollment_No) { %>
                                <div>
                                    <label class="text-sm font-medium text-gray-600">Enrollment No</label>
                                    <input type="text" name="Enrollment_No" value="<%= authUser.Enrollment_No %>"
                                        class="w-full border rounded px-4 py-2">
                                </div>
                                <% } %>
                                    <div>
                                        <label class="text-sm font-medium text-gray-600">Contact</label>
                                        <input type="text" name="Contact_no" value="<%= authUser.Contact_no %>"
                                            class="w-full border rounded px-4 py-2">
                                    </div>
                                    <div>
                                        <label class="text-sm font-medium text-gray-600">Bio (optional)</label>
                                        <textarea name="Bio" class="w-full border rounded px-4 py-2"></textarea>
                                    </div>
                                    <div>
                                        <label class="text-sm font-medium text-gray-600">Upload Image (optional)</label>
                                        <input type="file" name="Profile_Image" accept="image/*" class="w-full">
                                    </div>
                                    <button type="submit"
                                        class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-6 rounded-lg font-medium transition-colors">
                                        Update
                                    </button>
                        </form>
                    </div>

                    <!-- Logout Button -->
                    <div id="logoutWrapper" class="p-6 border-t flex justify-between">
                        <form action="/logout" method="POST" class="w-full">
                            <button type="submit"
                                class="w-full bg-red-600 hover:bg-red-700 text-white py-3 px-6 rounded-lg font-medium transition-colors">
                                Logout
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            <% } %>
    </footer>
    <br><br><br><br><br><br><br><br>
</body>
<script>

    const urlParams = new URLSearchParams(window.location.search);
    const message = urlParams.get('message');
    if (message) {
        alert(decodeURIComponent(message));
    }



    const editBtn = document.getElementById("edit_profile");
    const staticProfile = document.getElementById("staticProfile");
    const profileForm = document.getElementById("profileForm");
    const logoutWrapper = document.getElementById("logoutWrapper");

    document.addEventListener("DOMContentLoaded", () => {
        // Typing Effect Setup
        const introMessage =
            "Welcome to the CSE Alumni Network — a community where graduates connect, mentor, and grow together.\n" +
            "Discover opportunities, share experiences, and stay engaged with your CSE family.";

        const el = document.getElementById("typing-text");
        const typeDelay = 28;
        const pauseOnLineBreak = 250;

        function typeText(text, node, i = 0) {
            if (i >= text.length) return;
            const char = text[i];
            node.textContent += char;

            let nextDelay = typeDelay;
            if (char === "\n") nextDelay += pauseOnLineBreak;
            if (/[.,;:!?]/.test(char)) nextDelay += 70;

            setTimeout(() => typeText(text, node, i + 1), nextDelay);
        }

        if (el) {
            el.textContent = "";
            typeText(introMessage, el);
        }

        // Button References
        const btnPostJob = document.getElementById('job_button');//post job
        const btnViewJobs = document.getElementById('job_list');//
        const btnLogin = document.getElementById('log-in');
        const btnJoin = document.getElementById('join_network');//
        const profileBtn = document.getElementById("profile_btn");
        const alumniListBtn = document.getElementById("alumni_list");// 
        const editProfileBtn = document.getElementById("edit_profile");
        const mentorshipRequestBtn = document.getElementById("mentorship_request");
        const announcementNoContent = document.getElementById("no-content");

        // Profile Panel Elements
        const btnToggleProfile = document.getElementById('profileToggle');
        const panel = document.getElementById('profilePanel');
        const closeBtn = document.getElementById('profileClose');
        const overlay = document.getElementById('overlay');

        // Default visibility
        btnPostJob.style.display = "none";
        btnViewJobs.style.display = "none";
        profileBtn.style.display = "none";
        alumniListBtn.style.display = "none";
        mentorshipRequestBtn.style.display = "none";
        

        // Navigation actions

        btnPostJob.addEventListener('click', () => {
            window.location.href = "/job_post.html";
        });

        btnViewJobs.addEventListener('click', () => {
            window.location.href = "/job_read";
        });

        btnLogin.addEventListener('click', () => {
            window.location.href = "/login.html";
        });

        btnJoin.addEventListener('click', () => {
            window.location.href = "/register.html";
        });

    <% if (authUser) { %> 
        const userName = "<%= authUser.Full_Name %>";
            const userType = "<%= authUser.Role %>";
            console.log("Logged in as:", userName, "Role:", userType); 
    <% } else { %> 
        const userName = null;
            const userType = null;
            console.log("No user is logged in."); 
    <% } %> ;

        if (userName != null) {
            btnLogin.innerText = "Chat"
            btnJoin.innerText = "Support Desk"
            alumniListBtn.style.display = "block";
            mentorshipRequestBtn.style.display = "block";

            alumniListBtn.addEventListener("click", () => {
                window.location.href = "/alumni_read"
            })
            btnLogin.addEventListener('click', () => {
                window.location.href = "/chat_box.html";
            })

            btnJoin.addEventListener('click', () => {
                window.location.href = "/support_desk"
            })
            mentorshipRequestBtn.addEventListener("click" , ()=>{
                window.location.href = "/mentorshipSessionPage";
            })
            
        }
        if (userType == "student") {
            btnViewJobs.style.display = "block";
            profileBtn.style.display = "block";
            announcementNoContent.style.display = "none";
        }
        if (userType == "alumni") {
            btnViewJobs.style.display = "block";
            profileBtn.style.display = "block";
            btnPostJob.style.display = "block";
            announcementNoContent.style.display = "none";
        }
        // Profile Modal Logic
        const profileModal = document.getElementById('profileModal');
        const closeModal = document.getElementById('closeModal');
        const modalContent = profileModal.querySelector('.bg-white');

        function openProfileModal() {
            profileModal.classList.remove('hidden');
            setTimeout(() => {
                modalContent.classList.remove('scale-95', 'opacity-0');
                modalContent.classList.add('scale-100', 'opacity-100');
            }, 10);
            document.body.style.overflow = 'hidden';
        }

        function closeProfileModal() {
            modalContent.classList.remove('scale-100', 'opacity-100');
            modalContent.classList.add('scale-95', 'opacity-0');
            setTimeout(() => {
                profileModal.classList.add('hidden');
                document.body.style.overflow = 'auto';
            }, 300);
        }

        // Event listeners for profile modal
        profileBtn.addEventListener('click', openProfileModal);
        closeModal.addEventListener('click', closeProfileModal);
        profileModal.addEventListener('click', (e) => {
            if (e.target === profileModal) closeProfileModal();
        });
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !profileModal.classList.contains('hidden')) {
                closeProfileModal();
            }
        });
    });

    editBtn.addEventListener("click", () => {
        staticProfile.classList.add("hidden");
        profileForm.classList.remove("hidden");
        logoutWrapper.classList.add("hidden");
    });

    document.getElementById("closeModal").addEventListener("click", () => {
        document.getElementById("profileModal").classList.add("hidden");
        staticProfile.classList.remove("hidden");
        profileForm.classList.add("hidden");
        logoutWrapper.classList.remove("hidden");
    });

// ANNOUNCEMENTS 
   const announcements = <%- JSON.stringify(announcement) %>;

function createAnnouncementCard(announcement) {
    // Format date if it exists
    const formattedDate = announcement.Posted_On ? 
        new Date(announcement.Posted_On).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric'
        }) : 'No Date';

    return `
        <div class="announcement-card" onclick="openModal(${announcement.ID})">
            <div class="card-header">
                <span class="card-date">${formattedDate}</span>
            </div>
            <h3 class="card-title">${announcement.Title || 'No Title'}</h3>
            <p class="card-description">${(announcement.Description || 'No description available').substring(0, 120)}${announcement.Description && announcement.Description.length > 120 ? '...' : ''}</p>
            <div class="card-footer">
                <button class="read-more">
                    Read More
                    <span>→</span>
                </button>
            </div>
        </div>
    `;
}

function renderAnnouncements() {
    const grid = document.getElementById('announcementsGrid');
    if (announcements && announcements.length > 0) {
        grid.innerHTML = announcements.map(announcement => createAnnouncementCard(announcement)).join('');
    } else {
        grid.innerHTML = `
            <div class="no-announcements">
                <h3>📭 No Announcements</h3>
                <p>There are currently no announcements to display.</p>
            </div>
        `;
    }
}

function openModal(announcementId) {
    // Find announcement by ID (note: comparing with ID field from database)
    const announcement = announcements.find(a => a.ID === announcementId);
    
    if (!announcement) {
        console.log('Announcement not found with ID:', announcementId);
        return;
    }

    // Update modal content with database field names
    document.getElementById('modalTitle').textContent = announcement.Title || 'No Title';
    
    // Format date for modal
    const formattedDate = announcement.Posted_On ? 
        new Date(announcement.Posted_On).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        }) : 'No Date';
    document.getElementById('modalDate').textContent = formattedDate;
    
    // Use Description for modal content (you might want to add a separate full_description field in DB)
    document.getElementById('modalDescription').textContent = announcement.Description || 'No description available.';

    // Handle tags (if you have a tags field) or create from category
    const tagsContainer = document.getElementById('modalTags');
    if (announcement.Tags) {
        // If tags is a JSON string, parse it
        let tags = [];
        try {
            tags = typeof announcement.Tags === 'string' ? JSON.parse(announcement.Tags) : announcement.Tags;
        } catch (e) {
            tags = [announcement.Tags];
        }
        tagsContainer.innerHTML = tags.map(tag => `<span class="tag">${tag}</span>`).join('');
    } else if (announcement.Category) {
        tagsContainer.innerHTML = `<span class="tag">${announcement.Category}</span>`;
    } else {
        tagsContainer.innerHTML = '<span class="tag">General</span>';
    }

    // Store current announcement for action buttons
    window.currentAnnouncement = announcement;

    // Show modal
    document.getElementById('modalOverlay').classList.add('active');
    document.body.style.overflow = 'hidden';
}

function closeModal() {
    document.getElementById('modalOverlay').classList.remove('active');
    document.body.style.overflow = 'auto';
}

function handleImportantLink() {
    if (window.currentAnnouncement && window.currentAnnouncement.Important_Links) {
        window.open(window.currentAnnouncement.Important_Links, '_blank');
    } else if (window.currentAnnouncement && window.currentAnnouncement.Link) {
        window.open(window.currentAnnouncement.Link, '_blank');
    } else {
        alert('Important link not available for this announcement.');
    }
}


function handleViewFile() {
    if (window.currentAnnouncement && window.currentAnnouncement.Attachment_Url) {
        window.open(window.currentAnnouncement.Attachment_Url, '_blank');
    } else if (window.currentAnnouncement && window.currentAnnouncement.Attachment_Url) {
        window.open(window.currentAnnouncement.Attachment_Url, '_blank');
    } else {
        alert('File not available for this announcement.');
    }
}

// Event listeners - Wrap in DOMContentLoaded to ensure elements exist
document.addEventListener('DOMContentLoaded', function() {
    const modalClose = document.getElementById('modalClose');
    const modalOverlay = document.getElementById('modalOverlay');
    
    if (modalClose) {
        modalClose.addEventListener('click', closeModal);
    }
    
    if (modalOverlay) {
        modalOverlay.addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                closeModal();
            }
        });
    }
    
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeModal();
        }
    });
    
    // Initialize announcements
    renderAnnouncements();
});
</script>

</html>